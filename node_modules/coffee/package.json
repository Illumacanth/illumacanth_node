{
  "name": "coffee",
  "version": "1.0.1",
  "description": "Test command line on nodejs",
  "main": "index",
  "dependencies": {
    "debug": "~2.1.1"
  },
  "devDependencies": {
    "coveralls": "2",
    "istanbul": "0",
    "jshint": "*",
    "mocha": "1",
    "should": "~4.6.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/popomore/coffee"
  },
  "homepage": "https://github.com/popomore/coffee",
  "author": {
    "name": "popomore",
    "email": "sakura9515@gmail.com"
  },
  "keywords": [
    "test",
    "shell",
    "spawn",
    "fork",
    "child_process",
    "exec"
  ],
  "license": "MIT",
  "scripts": {
    "test": "make test"
  },
  "readme": "# Coffee\n\nTest command line on nodejs\n\n---\n\n[![NPM version](https://img.shields.io/npm/v/coffee.svg?style=flat)](https://npmjs.org/package/coffee)\n[![Build Status](https://img.shields.io/travis/popomore/coffee.svg?style=flat)](https://travis-ci.org/popomore/coffee)\n[![Build Status](https://img.shields.io/coveralls/popomore/coffee?style=flat)](https://coveralls.io/r/popomore/coffee)\n[![NPM downloads](http://img.shields.io/npm/dm/coffee.svg?style=flat)](https://npmjs.org/package/coffee)\n\n## Install\n\n```\n$ npm install coffee -g\n```\n\n## Usage\n\nCoffee is useful to test command line in Mocha or other test frammework.\n\n```\ndescribe('cat', function() {\n  it('should concat input', function(done) {\n    var coffee = require('coffee');\n    coffee.spawn('cat')\n    .write('1')\n    .write('2')\n    .expect('stdout', '12')\n    .expect('code', 0)\n    .end(done);\n  })\n})\n```\n\nYou can also use fork for spawning Node processes.\n\n```\ncoffee.fork('/path/to/file.js', ['args '])\n.expect('stdout', '12\\n')\n.expect('stderr', '34\\n')\n.expect('code', 0)\n.end(done);\n```\n\nIn file.js\n\n```\nconsole.log(12);\nconsole.log(34);\n```\n\n## API\n\n### coffee.spawn\n\nRun command using `child_process.spawn`, then return `Coffee` instance.\n\nArguments see [child_process.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options)\n\n### coffee.fork\n\nRun command using `child_process.fork`, then return `Coffee` instance.\n\nArguments see [child_process.fork](http://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options)\n\n### Coffee\n\nAssertion object\n\n#### coffee.expect(type, expected)\n\nAssert type with expected value, expected value can be string, regular expression, and array. \n\n```\ncoffee.spawn('echo', ['abcdefg'])\n.expect('stdout', 'abcdefg')\n.expect('stdout', /^abc/)\n.expect('stdout', ['abcdefg', /abc/])\n.end(done);\n```\n\nAccept type: `stdout`, `stderr`, `code`\n\n#### coffee.write(data)\n\nWrite data to stdin, see example above.\n\n#### coffee.end(callback)\n\nCallback will be called after completing the assertion, the first argument is Error if throw exception. \n\n## LISENCE\n\nCopyright (c) 2015 popomore. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/popomore/coffee/issues"
  },
  "_id": "coffee@1.0.1",
  "dist": {
    "shasum": "4c84cef4eed2d2caaaad8ac0d28cc28dacb4d534"
  },
  "_from": "coffee@>1.0.0",
  "_resolved": "https://registry.npmjs.org/coffee/-/coffee-1.0.1.tgz"
}
